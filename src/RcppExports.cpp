// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// BS_call_cpp
double BS_call_cpp(const double V, const double D, const double T, const double r, const double vol);
RcppExport SEXP _DtD_BS_call_cpp(SEXP VSEXP, SEXP DSEXP, SEXP TSEXP, SEXP rSEXP, SEXP volSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const double >::type V(VSEXP);
    Rcpp::traits::input_parameter< const double >::type D(DSEXP);
    Rcpp::traits::input_parameter< const double >::type T(TSEXP);
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type vol(volSEXP);
    rcpp_result_gen = Rcpp::wrap(BS_call_cpp(V, D, T, r, vol));
    return rcpp_result_gen;
END_RCPP
}
// get_underlying_cpp
arma::vec get_underlying_cpp(const arma::vec& S, const arma::vec& D, const arma::vec& T, const arma::vec& r, const arma::vec& vol, const double tol);
RcppExport SEXP _DtD_get_underlying_cpp(SEXP SSEXP, SEXP DSEXP, SEXP TSEXP, SEXP rSEXP, SEXP volSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type D(DSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type T(TSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type r(rSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vol(volSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(get_underlying_cpp(S, D, T, r, vol, tol));
    return rcpp_result_gen;
END_RCPP
}
// merton_ll_cpp
double merton_ll_cpp(const arma::vec& S, const arma::vec& D, const arma::vec& T, const arma::vec& r, const arma::vec& time, const double vol, const double mu, const double tol);
RcppExport SEXP _DtD_merton_ll_cpp(SEXP SSEXP, SEXP DSEXP, SEXP TSEXP, SEXP rSEXP, SEXP timeSEXP, SEXP volSEXP, SEXP muSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type D(DSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type T(TSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type r(rSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const double >::type vol(volSEXP);
    Rcpp::traits::input_parameter< const double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(merton_ll_cpp(S, D, T, r, time, vol, mu, tol));
    return rcpp_result_gen;
END_RCPP
}
// BS_fit_cpp
Rcpp::List BS_fit_cpp(const arma::vec& S, const arma::vec& D, const arma::vec& T, const arma::vec& r, const arma::vec& time, double vol_start, const std::string method, const double tol, const double eps);
RcppExport SEXP _DtD_BS_fit_cpp(SEXP SSEXP, SEXP DSEXP, SEXP TSEXP, SEXP rSEXP, SEXP timeSEXP, SEXP vol_startSEXP, SEXP methodSEXP, SEXP tolSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type D(DSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type T(TSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type r(rSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type time(timeSEXP);
    Rcpp::traits::input_parameter< double >::type vol_start(vol_startSEXP);
    Rcpp::traits::input_parameter< const std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(BS_fit_cpp(S, D, T, r, time, vol_start, method, tol, eps));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DtD_BS_call_cpp", (DL_FUNC) &_DtD_BS_call_cpp, 5},
    {"_DtD_get_underlying_cpp", (DL_FUNC) &_DtD_get_underlying_cpp, 6},
    {"_DtD_merton_ll_cpp", (DL_FUNC) &_DtD_merton_ll_cpp, 8},
    {"_DtD_BS_fit_cpp", (DL_FUNC) &_DtD_BS_fit_cpp, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_DtD(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
